{
  "header_types" : [
    {
      "name" : "scalars_0",
      "id" : 0,
      "fields" : [
        ["tmp", 32, false],
        ["tmp_0", 32, false],
        ["tmp_1", 16, false],
        ["tmp_2", 16, false],
        ["tmp_3", 8, false],
        ["tmp_4", 32, false],
        ["tmp_5", 32, false],
        ["tmp_6", 32, false],
        ["tmp_7", 16, false],
        ["tmp_8", 16, false],
        ["tmp_9", 8, false],
        ["tmp_10", 32, false],
        ["tmp_11", 32, false],
        ["tmp_12", 32, false],
        ["tmp_13", 16, false],
        ["tmp_14", 16, false],
        ["tmp_15", 8, false],
        ["tmp_16", 32, false],
        ["register_index_0", 12, false],
        ["seed_0", 32, false],
        ["register_index_1", 12, false],
        ["seed_1", 32, false],
        ["src_ip_0", 32, false],
        ["tmp_17", 32, false],
        ["tmp_18", 32, false],
        ["tmp_19", 16, false],
        ["tmp_20", 16, false],
        ["tmp_21", 8, false],
        ["tmp_22", 32, false],
        ["tmp_23", 32, false],
        ["backoff_0", 48, false],
        ["probability_0", 8, false],
        ["userMetadata._ecmp_hash0", 14, false],
        ["userMetadata._ecmp_group_id1", 14, false],
        ["userMetadata._egress_type2", 4, false],
        ["userMetadata._feedback_ts3", 48, false],
        ["userMetadata._feedback_register_index4", 12, false],
        ["_padding_0", 4, false]
      ]
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "fields" : [
        ["ingress_port", 9, false],
        ["egress_spec", 9, false],
        ["egress_port", 9, false],
        ["instance_type", 32, false],
        ["packet_length", 32, false],
        ["enq_timestamp", 32, false],
        ["enq_qdepth", 19, false],
        ["deq_timedelta", 32, false],
        ["deq_qdepth", 19, false],
        ["ingress_global_timestamp", 48, false],
        ["egress_global_timestamp", 48, false],
        ["mcast_grp", 16, false],
        ["egress_rid", 16, false],
        ["checksum_error", 1, false],
        ["parser_error", 32, false],
        ["priority", 3, false],
        ["_padding", 3, false]
      ]
    },
    {
      "name" : "ethernet_t",
      "id" : 2,
      "fields" : [
        ["dstAddr", 48, false],
        ["srcAddr", 48, false],
        ["etherType", 16, false]
      ]
    },
    {
      "name" : "telemetry_t",
      "id" : 3,
      "fields" : [
        ["enq_qdepth", 16, false],
        ["nextHeaderType", 16, false]
      ]
    },
    {
      "name" : "ipv4_t",
      "id" : 4,
      "fields" : [
        ["version", 4, false],
        ["ihl", 4, false],
        ["tos", 8, false],
        ["totalLen", 16, false],
        ["identification", 16, false],
        ["flags", 3, false],
        ["fragOffset", 13, false],
        ["ttl", 8, false],
        ["protocol", 8, false],
        ["hdrChecksum", 16, false],
        ["srcAddr", 32, false],
        ["dstAddr", 32, false]
      ]
    },
    {
      "name" : "tcp_t",
      "id" : 5,
      "fields" : [
        ["srcPort", 16, false],
        ["dstPort", 16, false],
        ["seqNo", 32, false],
        ["ackNo", 32, false],
        ["dataOffset", 4, false],
        ["res", 4, false],
        ["cwr", 1, false],
        ["ece", 1, false],
        ["urg", 1, false],
        ["ack", 1, false],
        ["psh", 1, false],
        ["rst", 1, false],
        ["syn", 1, false],
        ["fin", 1, false],
        ["window", 16, false],
        ["checksum", 16, false],
        ["urgentPtr", 16, false]
      ]
    }
  ],
  "headers" : [
    {
      "name" : "scalars",
      "id" : 0,
      "header_type" : "scalars_0",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "header_type" : "standard_metadata",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "ethernet",
      "id" : 2,
      "header_type" : "ethernet_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "telemetry",
      "id" : 3,
      "header_type" : "telemetry_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "ipv4",
      "id" : 4,
      "header_type" : "ipv4_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "tcp",
      "id" : 5,
      "header_type" : "tcp_t",
      "metadata" : false,
      "pi_omit" : true
    }
  ],
  "header_stacks" : [],
  "header_union_types" : [],
  "header_unions" : [],
  "header_union_stacks" : [],
  "field_lists" : [
    {
      "id" : 1,
      "name" : "field_list1",
      "elements" : [
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._feedback_ts3"]
        }
      ]
    },
    {
      "id" : 2,
      "name" : "field_list2",
      "elements" : [
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._feedback_ts3"]
        }
      ]
    },
    {
      "id" : 3,
      "name" : "fl",
      "elements" : []
    }
  ],
  "errors" : [
    ["NoError", 0],
    ["PacketTooShort", 1],
    ["NoMatch", 2],
    ["StackOutOfBounds", 3],
    ["HeaderTooShort", 4],
    ["ParserTimeout", 5],
    ["ParserInvalidArgument", 6]
  ],
  "enums" : [],
  "parsers" : [
    {
      "name" : "parser",
      "id" : 0,
      "init_state" : "start",
      "parse_states" : [
        {
          "name" : "start",
          "id" : 0,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ethernet"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x0800",
              "mask" : null,
              "next_state" : "parse_ipv4"
            },
            {
              "type" : "hexstr",
              "value" : "0x7777",
              "mask" : null,
              "next_state" : "parse_telemetry"
            },
            {
              "type" : "hexstr",
              "value" : "0x7778",
              "mask" : null,
              "next_state" : "parse_ipv4"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            }
          ]
        },
        {
          "name" : "parse_telemetry",
          "id" : 1,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "telemetry"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x0800",
              "mask" : null,
              "next_state" : "parse_ipv4"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["telemetry", "nextHeaderType"]
            }
          ]
        },
        {
          "name" : "parse_ipv4",
          "id" : 2,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ipv4"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x06",
              "mask" : null,
              "next_state" : "parse_tcp"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ]
        },
        {
          "name" : "parse_tcp",
          "id" : 3,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "tcp"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        }
      ]
    }
  ],
  "parse_vsets" : [],
  "deparsers" : [
    {
      "name" : "deparser",
      "id" : 0,
      "source_info" : {
        "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/include/parsers.p4",
        "line" : 50,
        "column" : 8,
        "source_fragment" : "MyDeparser"
      },
      "order" : ["ethernet", "telemetry", "ipv4", "tcp"],
      "primitives" : []
    }
  ],
  "meter_arrays" : [],
  "counter_arrays" : [],
  "register_arrays" : [
    {
      "name" : "MyIngress.loadbalance_seed",
      "id" : 0,
      "source_info" : {
        "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
        "line" : 41,
        "column" : 29,
        "source_fragment" : "loadbalance_seed"
      },
      "size" : 1024,
      "bitwidth" : 32
    },
    {
      "name" : "MyEgress.feedback_ts",
      "id" : 1,
      "source_info" : {
        "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
        "line" : 210,
        "column" : 29,
        "source_fragment" : "feedback_ts"
      },
      "size" : 1024,
      "bitwidth" : 48
    }
  ],
  "calculations" : [
    {
      "name" : "calc",
      "id" : 0,
      "algo" : "crc16",
      "input" : [
        {
          "type" : "field",
          "value" : ["scalars", "tmp"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_0"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_1"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_2"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_3"]
        }
      ]
    },
    {
      "name" : "calc_0",
      "id" : 1,
      "algo" : "crc16",
      "input" : [
        {
          "type" : "field",
          "value" : ["scalars", "tmp_5"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_6"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_7"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_8"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_9"]
        }
      ]
    },
    {
      "name" : "calc_1",
      "id" : 2,
      "algo" : "crc16",
      "input" : [
        {
          "type" : "field",
          "value" : ["scalars", "tmp_11"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_12"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_13"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_14"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_15"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_16"]
        }
      ]
    },
    {
      "name" : "calc_2",
      "id" : 3,
      "algo" : "crc16",
      "input" : [
        {
          "type" : "field",
          "value" : ["scalars", "tmp_17"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_18"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_19"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_20"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_21"]
        }
      ]
    },
    {
      "name" : "calc_3",
      "id" : 4,
      "source_info" : {
        "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
        "line" : 307,
        "column" : 1,
        "source_fragment" : "update_checksum( ..."
      },
      "algo" : "csum16",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "version"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "ihl"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "tos"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "totalLen"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "identification"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "flags"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "fragOffset"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "ttl"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "protocol"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "srcAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dstAddr"]
        }
      ]
    }
  ],
  "learn_lists" : [],
  "actions" : [
    {
      "name" : "NoAction",
      "id" : 0,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 1,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "MyIngress.drop",
      "id" : 2,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 44,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.drop",
      "id" : 3,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 44,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.drop",
      "id" : 4,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 44,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.set_egress_type",
      "id" : 5,
      "runtime_data" : [
        {
          "name" : "egress_type",
          "bitwidth" : 4
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._egress_type2"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 49,
            "column" : 8,
            "source_fragment" : "meta.egress_type = egress_type"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.update_flow_seed",
      "id" : 6,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "modify_field_rng_uniform",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "seed_0"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            },
            {
              "type" : "hexstr",
              "value" : "0x0012d687"
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 72,
            "column" : 8,
            "source_fragment" : "random(seed, (bit<32>)0, (bit<32>)1234567)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 78,
            "column" : 7,
            "source_fragment" : "hdr.ipv4.dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_0"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "srcAddr"]
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 79,
            "column" : 7,
            "source_fragment" : "hdr.ipv4.srcAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_1"]
            },
            {
              "type" : "field",
              "value" : ["tcp", "srcPort"]
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 80,
            "column" : 14,
            "source_fragment" : "hdr.tcp.srcPort"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_2"]
            },
            {
              "type" : "field",
              "value" : ["tcp", "dstPort"]
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 81,
            "column" : 14,
            "source_fragment" : "hdr.tcp.dstPort"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_3"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 82,
            "column" : 14,
            "source_fragment" : "hdr.ipv4.protocol"
          }
        },
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "register_index_0"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            },
            {
              "type" : "calculation",
              "value" : "calc"
            },
            {
              "type" : "hexstr",
              "value" : "0x0400"
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 75,
            "column" : 8,
            "source_fragment" : "hash(register_index, ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "register_index_0"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 86,
            "column" : 28,
            "source_fragment" : "(bit<32>)register_index"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.loadbalance_seed"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_4"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "seed_0"]
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 86,
            "column" : 5,
            "source_fragment" : "loadbalance_seed.write((bit<32>)register_index, seed)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.ecmp_group",
      "id" : 7,
      "runtime_data" : [
        {
          "name" : "ecmp_group_id",
          "bitwidth" : 14
        },
        {
          "name" : "num_nhops",
          "bitwidth" : 16
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_5"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "srcAddr"]
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 99,
            "column" : 7,
            "source_fragment" : "hdr.ipv4.srcAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_6"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 100,
            "column" : 7,
            "source_fragment" : "hdr.ipv4.dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_7"]
            },
            {
              "type" : "field",
              "value" : ["tcp", "srcPort"]
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 101,
            "column" : 14,
            "source_fragment" : "hdr.tcp.srcPort"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_8"]
            },
            {
              "type" : "field",
              "value" : ["tcp", "dstPort"]
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 102,
            "column" : 14,
            "source_fragment" : "hdr.tcp.dstPort"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_9"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 103,
            "column" : 14,
            "source_fragment" : "hdr.ipv4.protocol"
          }
        },
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "register_index_1"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            },
            {
              "type" : "calculation",
              "value" : "calc_0"
            },
            {
              "type" : "hexstr",
              "value" : "0x0400"
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 96,
            "column" : 8,
            "source_fragment" : "hash(register_index, ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_10"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "register_index_1"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 107,
            "column" : 33,
            "source_fragment" : "(bit<32>)register_index"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "seed_1"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.loadbalance_seed"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_10"]
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 107,
            "column" : 5,
            "source_fragment" : "loadbalance_seed.read(seed, (bit<32>)register_index)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_11"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "srcAddr"]
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 114,
            "column" : 7,
            "source_fragment" : "hdr.ipv4.srcAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_12"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 115,
            "column" : 7,
            "source_fragment" : "hdr.ipv4.dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_13"]
            },
            {
              "type" : "field",
              "value" : ["tcp", "srcPort"]
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 116,
            "column" : 14,
            "source_fragment" : "hdr.tcp.srcPort"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_14"]
            },
            {
              "type" : "field",
              "value" : ["tcp", "dstPort"]
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 117,
            "column" : 14,
            "source_fragment" : "hdr.tcp.dstPort"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_15"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 118,
            "column" : 14,
            "source_fragment" : "hdr.ipv4.protocol"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_16"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "seed_1"]
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 119,
            "column" : 14,
            "source_fragment" : "seed"
          }
        },
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._ecmp_hash0"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            },
            {
              "type" : "calculation",
              "value" : "calc_1"
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 111,
            "column" : 8,
            "source_fragment" : "hash(meta.ecmp_hash, ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._ecmp_group_id1"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 123,
            "column" : 5,
            "source_fragment" : "meta.ecmp_group_id = ecmp_group_id"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.set_nhop",
      "id" : 8,
      "runtime_data" : [
        {
          "name" : "dstAddr",
          "bitwidth" : 48
        },
        {
          "name" : "port",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "srcAddr"]
            },
            {
              "type" : "field",
              "value" : ["ethernet", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 129,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.srcAddr = hdr.ethernet.dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "dstAddr"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 130,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.dstAddr = dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 131,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "ttl"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4", "ttl"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 132,
            "column" : 8,
            "source_fragment" : "hdr.ipv4.ttl = hdr.ipv4.ttl - 1"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.set_nhop",
      "id" : 9,
      "runtime_data" : [
        {
          "name" : "dstAddr",
          "bitwidth" : 48
        },
        {
          "name" : "port",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "srcAddr"]
            },
            {
              "type" : "field",
              "value" : ["ethernet", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 129,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.srcAddr = hdr.ethernet.dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "dstAddr"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 130,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.dstAddr = dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 131,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "ttl"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4", "ttl"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 132,
            "column" : 8,
            "source_fragment" : "hdr.ipv4.ttl = hdr.ipv4.ttl - 1"
          }
        }
      ]
    },
    {
      "name" : "loadbalancer167",
      "id" : 10,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "src_ip_0"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "srcAddr"]
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 167,
            "column" : 12,
            "source_fragment" : "bit<32> src_ip = hdr.ipv4.srcAddr;"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "srcAddr"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 168,
            "column" : 12,
            "source_fragment" : "hdr.ipv4.srcAddr = hdr.ipv4.dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "dstAddr"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "src_ip_0"]
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 169,
            "column" : 12,
            "source_fragment" : "hdr.ipv4.dstAddr = src_ip"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            },
            {
              "type" : "hexstr",
              "value" : "0x7778"
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/include/headers.p4",
            "line" : 7,
            "column" : 30,
            "source_fragment" : "0x7778; ..."
          }
        }
      ]
    },
    {
      "name" : "MyEgress.read_feedback_ts",
      "id" : 11,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_17"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "srcAddr"]
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 218,
            "column" : 7,
            "source_fragment" : "hdr.ipv4.srcAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_18"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 219,
            "column" : 7,
            "source_fragment" : "hdr.ipv4.dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_19"]
            },
            {
              "type" : "field",
              "value" : ["tcp", "srcPort"]
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 220,
            "column" : 14,
            "source_fragment" : "hdr.tcp.srcPort"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_20"]
            },
            {
              "type" : "field",
              "value" : ["tcp", "dstPort"]
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 221,
            "column" : 14,
            "source_fragment" : "hdr.tcp.dstPort"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_21"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 222,
            "column" : 14,
            "source_fragment" : "hdr.ipv4.protocol"
          }
        },
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._feedback_register_index4"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            },
            {
              "type" : "calculation",
              "value" : "calc_2"
            },
            {
              "type" : "hexstr",
              "value" : "0x0400"
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 215,
            "column" : 8,
            "source_fragment" : "hash(meta.feedback_register_index, ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_22"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "userMetadata._feedback_register_index4"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 227,
            "column" : 36,
            "source_fragment" : "(bit<32>)meta.feedback_register_index"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._feedback_ts3"]
            },
            {
              "type" : "register_array",
              "value" : "MyEgress.feedback_ts"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_22"]
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 227,
            "column" : 1,
            "source_fragment" : "feedback_ts.read(meta.feedback_ts, (bit<32>)meta.feedback_register_index)"
          }
        }
      ]
    },
    {
      "name" : "loadbalancer235",
      "id" : 12,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "recirculate",
          "parameters" : [
            {
              "type" : "hexstr",
              "value" : "0x2"
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 235,
            "column" : 12,
            "source_fragment" : "recirculate_preserving_field_list(2)"
          }
        }
      ]
    },
    {
      "name" : "loadbalancer249",
      "id" : 13,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["telemetry", "enq_qdepth"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "field",
                        "value" : ["standard_metadata", "enq_qdepth"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00ffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 249,
            "column" : 24,
            "source_fragment" : "hdr.telemetry.enq_qdepth = (bit<16>)standard_metadata.enq_qdepth"
          }
        }
      ]
    },
    {
      "name" : "loadbalancer276",
      "id" : 14,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "clone_egress_pkt_to_egress",
          "parameters" : [
            {
              "type" : "hexstr",
              "value" : "0x00000064"
            },
            {
              "type" : "hexstr",
              "value" : "0x3"
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 276,
            "column" : 36,
            "source_fragment" : "clone(CloneType.E2E, 100)"
          }
        }
      ]
    },
    {
      "name" : "loadbalancer269",
      "id" : 15,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_23"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "userMetadata._feedback_register_index4"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 269,
            "column" : 47,
            "source_fragment" : "(bit<32>)meta.feedback_register_index"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyEgress.feedback_ts"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_23"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_global_timestamp"]
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 269,
            "column" : 29,
            "source_fragment" : "feedback_ts.write((bit<32>)meta.feedback_register_index, standard_metadata.ingress_global_timestamp)"
          }
        },
        {
          "op" : "modify_field_rng_uniform",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "probability_0"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            },
            {
              "type" : "hexstr",
              "value" : "0x03"
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 273,
            "column" : 29,
            "source_fragment" : "random(probability, 8w0, 8w3)"
          }
        }
      ]
    },
    {
      "name" : "loadbalancer265",
      "id" : 16,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "modify_field_rng_uniform",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "backoff_0"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000007a120"
            },
            {
              "type" : "hexstr",
              "value" : "0x0000000f4240"
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 265,
            "column" : 28,
            "source_fragment" : "random(backoff, 48w500000, 48w1000000)"
          }
        }
      ]
    },
    {
      "name" : "loadbalancer254",
      "id" : 17,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0800"
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/include/headers.p4",
            "line" : 5,
            "column" : 26,
            "source_fragment" : "0x800; ..."
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "telemetry"
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 256,
            "column" : 24,
            "source_fragment" : "hdr.telemetry.setInvalid()"
          }
        }
      ]
    },
    {
      "name" : "loadbalancer287",
      "id" : 18,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "telemetry"
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 287,
            "column" : 24,
            "source_fragment" : "hdr.telemetry.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["telemetry", "enq_qdepth"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "field",
                        "value" : ["standard_metadata", "enq_qdepth"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00ffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 289,
            "column" : 24,
            "source_fragment" : "hdr.telemetry.enq_qdepth = (bit<16>)standard_metadata.enq_qdepth"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            },
            {
              "type" : "hexstr",
              "value" : "0x7777"
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/include/headers.p4",
            "line" : 6,
            "column" : 31,
            "source_fragment" : "0x7777; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["telemetry", "nextHeaderType"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0800"
            }
          ],
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/include/headers.p4",
            "line" : 5,
            "column" : 26,
            "source_fragment" : "0x800; ..."
          }
        }
      ]
    }
  ],
  "pipelines" : [
    {
      "name" : "ingress",
      "id" : 0,
      "source_info" : {
        "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
        "line" : 36,
        "column" : 8,
        "source_fragment" : "MyIngress"
      },
      "init_table" : "node_2",
      "tables" : [
        {
          "name" : "tbl_loadbalancer167",
          "id" : 0,
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 167,
            "column" : 12,
            "source_fragment" : "bit<32> src_ip = hdr.ipv4.srcAddr; ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [10],
          "actions" : ["loadbalancer167"],
          "base_default_next" : "node_4",
          "next_tables" : {
            "loadbalancer167" : "node_4"
          },
          "default_entry" : {
            "action_id" : 10,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "MyIngress.ipv4_lpm",
          "id" : 1,
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 150,
            "column" : 10,
            "source_fragment" : "ipv4_lpm"
          },
          "key" : [
            {
              "match_type" : "lpm",
              "name" : "hdr.ipv4.dstAddr",
              "target" : ["ipv4", "dstAddr"],
              "mask" : null
            }
          ],
          "match_type" : "lpm",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [9, 7, 3],
          "actions" : ["MyIngress.set_nhop", "MyIngress.ecmp_group", "MyIngress.drop"],
          "base_default_next" : "MyIngress.egress_type",
          "next_tables" : {
            "MyIngress.ecmp_group" : "MyIngress.ecmp_group_to_nhop",
            "MyIngress.set_nhop" : "MyIngress.egress_type",
            "MyIngress.drop" : "MyIngress.egress_type"
          },
          "default_entry" : {
            "action_id" : 3,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "MyIngress.ecmp_group_to_nhop",
          "id" : 2,
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 138,
            "column" : 10,
            "source_fragment" : "ecmp_group_to_nhop"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "meta.ecmp_group_id",
              "target" : ["scalars", "userMetadata._ecmp_group_id1"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "meta.ecmp_hash",
              "target" : ["scalars", "userMetadata._ecmp_hash0"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [2, 8, 1],
          "actions" : ["MyIngress.drop", "MyIngress.set_nhop", "NoAction"],
          "base_default_next" : "MyIngress.egress_type",
          "next_tables" : {
            "MyIngress.drop" : "MyIngress.egress_type",
            "MyIngress.set_nhop" : "MyIngress.egress_type",
            "NoAction" : "MyIngress.egress_type"
          },
          "default_entry" : {
            "action_id" : 1,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "MyIngress.egress_type",
          "id" : 3,
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 53,
            "column" : 10,
            "source_fragment" : "egress_type"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "standard_metadata.egress_spec",
              "target" : ["standard_metadata", "egress_spec"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 64,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [5, 0],
          "actions" : ["MyIngress.set_egress_type", "NoAction"],
          "base_default_next" : "node_8",
          "next_tables" : {
            "MyIngress.set_egress_type" : "node_8",
            "NoAction" : "node_8"
          },
          "default_entry" : {
            "action_id" : 0,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_update_flow_seed",
          "id" : 4,
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 193,
            "column" : 12,
            "source_fragment" : "update_flow_seed()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [6],
          "actions" : ["MyIngress.update_flow_seed"],
          "base_default_next" : "tbl_drop",
          "next_tables" : {
            "MyIngress.update_flow_seed" : "tbl_drop"
          },
          "default_entry" : {
            "action_id" : 6,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_drop",
          "id" : 5,
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 195,
            "column" : 12,
            "source_fragment" : "drop()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [4],
          "actions" : ["MyIngress.drop"],
          "base_default_next" : null,
          "next_tables" : {
            "MyIngress.drop" : null
          },
          "default_entry" : {
            "action_id" : 4,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_2",
          "id" : 0,
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 165,
            "column" : 12,
            "source_fragment" : "standard_metadata.instance_type == 4"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["standard_metadata", "instance_type"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x00000004"
              }
            }
          },
          "true_next" : "tbl_loadbalancer167",
          "false_next" : "node_4"
        },
        {
          "name" : "node_4",
          "id" : 1,
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 175,
            "column" : 12,
            "source_fragment" : "hdr.ipv4.isValid() && hdr.ipv4.ttl > 1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["ipv4", "$valid$"]
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : ">",
                  "left" : {
                    "type" : "field",
                    "value" : ["ipv4", "ttl"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  }
                }
              }
            }
          },
          "true_next" : "MyIngress.ipv4_lpm",
          "false_next" : "MyIngress.egress_type"
        },
        {
          "name" : "node_8",
          "id" : 2,
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 191,
            "column" : 12,
            "source_fragment" : "standard_metadata.instance_type == 0 && hdr.ethernet.etherType == TYPE_FEEDBACK && meta.egress_type == TYPE_EGRESS_HOST"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "and",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["standard_metadata", "instance_type"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000000"
                      }
                    }
                  },
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["ethernet", "etherType"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x7778"
                      }
                    }
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "userMetadata._egress_type2"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  }
                }
              }
            }
          },
          "false_next" : null,
          "true_next" : "tbl_update_flow_seed"
        }
      ]
    },
    {
      "name" : "egress",
      "id" : 1,
      "source_info" : {
        "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
        "line" : 205,
        "column" : 8,
        "source_fragment" : "MyEgress"
      },
      "init_table" : "node_13",
      "tables" : [
        {
          "name" : "tbl_loadbalancer235",
          "id" : 6,
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 235,
            "column" : 12,
            "source_fragment" : "recirculate_preserving_field_list(2)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [12],
          "actions" : ["loadbalancer235"],
          "base_default_next" : null,
          "next_tables" : {
            "loadbalancer235" : null
          },
          "default_entry" : {
            "action_id" : 12,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_loadbalancer249",
          "id" : 7,
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 249,
            "column" : 49,
            "source_fragment" : "="
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [13],
          "actions" : ["loadbalancer249"],
          "base_default_next" : null,
          "next_tables" : {
            "loadbalancer249" : null
          },
          "default_entry" : {
            "action_id" : 13,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_loadbalancer254",
          "id" : 8,
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 254,
            "column" : 47,
            "source_fragment" : "= TYPE_IPV4; ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [17],
          "actions" : ["loadbalancer254"],
          "base_default_next" : "node_22",
          "next_tables" : {
            "loadbalancer254" : "node_22"
          },
          "default_entry" : {
            "action_id" : 17,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_read_feedback_ts",
          "id" : 9,
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 261,
            "column" : 28,
            "source_fragment" : "read_feedback_ts()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [11],
          "actions" : ["MyEgress.read_feedback_ts"],
          "base_default_next" : "tbl_loadbalancer265",
          "next_tables" : {
            "MyEgress.read_feedback_ts" : "tbl_loadbalancer265"
          },
          "default_entry" : {
            "action_id" : 11,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_loadbalancer265",
          "id" : 10,
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 265,
            "column" : 28,
            "source_fragment" : "random(backoff, 48w500000, 48w1000000)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [16],
          "actions" : ["loadbalancer265"],
          "base_default_next" : "node_25",
          "next_tables" : {
            "loadbalancer265" : "node_25"
          },
          "default_entry" : {
            "action_id" : 16,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_loadbalancer269",
          "id" : 11,
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 269,
            "column" : 29,
            "source_fragment" : "feedback_ts.write((bit<32>)meta.feedback_register_index, standard_metadata.ingress_global_timestamp); ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [15],
          "actions" : ["loadbalancer269"],
          "base_default_next" : "node_27",
          "next_tables" : {
            "loadbalancer269" : "node_27"
          },
          "default_entry" : {
            "action_id" : 15,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_loadbalancer276",
          "id" : 12,
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 276,
            "column" : 36,
            "source_fragment" : "clone(CloneType.E2E, 100)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [14],
          "actions" : ["loadbalancer276"],
          "base_default_next" : null,
          "next_tables" : {
            "loadbalancer276" : null
          },
          "default_entry" : {
            "action_id" : 14,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_loadbalancer287",
          "id" : 13,
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 287,
            "column" : 24,
            "source_fragment" : "hdr.telemetry.setValid(); ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [18],
          "actions" : ["loadbalancer287"],
          "base_default_next" : null,
          "next_tables" : {
            "loadbalancer287" : null
          },
          "default_entry" : {
            "action_id" : 18,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_13",
          "id" : 3,
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 234,
            "column" : 12,
            "source_fragment" : "standard_metadata.instance_type == 2"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["standard_metadata", "instance_type"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x00000002"
              }
            }
          },
          "true_next" : "tbl_loadbalancer235",
          "false_next" : "node_15"
        },
        {
          "name" : "node_15",
          "id" : 4,
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 239,
            "column" : 17,
            "source_fragment" : "standard_metadata.instance_type == 0 && hdr.ethernet.etherType != TYPE_FEEDBACK"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "instance_type"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x00000000"
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "!=",
                  "left" : {
                    "type" : "field",
                    "value" : ["ethernet", "etherType"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x7778"
                  }
                }
              }
            }
          },
          "false_next" : null,
          "true_next" : "node_16"
        },
        {
          "name" : "node_16",
          "id" : 5,
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 241,
            "column" : 16,
            "source_fragment" : "hdr.tcp.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["tcp", "$valid$"]
              }
            }
          },
          "false_next" : null,
          "true_next" : "node_17"
        },
        {
          "name" : "node_17",
          "id" : 6,
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 244,
            "column" : 20,
            "source_fragment" : "hdr.telemetry.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["telemetry", "$valid$"]
              }
            }
          },
          "true_next" : "node_18",
          "false_next" : "node_29"
        },
        {
          "name" : "node_18",
          "id" : 7,
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 247,
            "column" : 24,
            "source_fragment" : "hdr.telemetry.enq_qdepth < (bit<16>)standard_metadata.enq_qdepth && meta.egress_type == TYPE_EGRESS_SWITCH"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "<",
                  "left" : {
                    "type" : "field",
                    "value" : ["telemetry", "enq_qdepth"]
                  },
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "field",
                            "value" : ["standard_metadata", "enq_qdepth"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00ffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "userMetadata._egress_type2"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x02"
                  }
                }
              }
            }
          },
          "true_next" : "tbl_loadbalancer249",
          "false_next" : "node_20"
        },
        {
          "name" : "node_20",
          "id" : 8,
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 252,
            "column" : 29,
            "source_fragment" : "meta.egress_type == TYPE_EGRESS_HOST"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "userMetadata._egress_type2"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x01"
              }
            }
          },
          "false_next" : null,
          "true_next" : "tbl_loadbalancer254"
        },
        {
          "name" : "node_22",
          "id" : 9,
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 259,
            "column" : 28,
            "source_fragment" : "hdr.telemetry.enq_qdepth > 50"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : ">",
              "left" : {
                "type" : "field",
                "value" : ["telemetry", "enq_qdepth"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x0032"
              }
            }
          },
          "false_next" : null,
          "true_next" : "tbl_read_feedback_ts"
        },
        {
          "name" : "node_25",
          "id" : 10,
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 267,
            "column" : 32,
            "source_fragment" : "(standard_metadata.ingress_global_timestamp - meta.feedback_ts) > backoff"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : ">",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "-",
                      "left" : {
                        "type" : "field",
                        "value" : ["standard_metadata", "ingress_global_timestamp"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._feedback_ts3"]
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffff"
                  }
                }
              },
              "right" : {
                "type" : "field",
                "value" : ["scalars", "backoff_0"]
              }
            }
          },
          "false_next" : null,
          "true_next" : "tbl_loadbalancer269"
        },
        {
          "name" : "node_27",
          "id" : 11,
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 275,
            "column" : 29,
            "source_fragment" : "probability == 0"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "probability_0"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x00"
              }
            }
          },
          "false_next" : null,
          "true_next" : "tbl_loadbalancer276"
        },
        {
          "name" : "node_29",
          "id" : 12,
          "source_info" : {
            "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
            "line" : 285,
            "column" : 24,
            "source_fragment" : "meta.egress_type == TYPE_EGRESS_SWITCH"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "userMetadata._egress_type2"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x02"
              }
            }
          },
          "false_next" : null,
          "true_next" : "tbl_loadbalancer287"
        }
      ]
    }
  ],
  "checksums" : [
    {
      "name" : "cksum",
      "id" : 0,
      "source_info" : {
        "filename" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4",
        "line" : 307,
        "column" : 1,
        "source_fragment" : "update_checksum( ..."
      },
      "target" : ["ipv4", "hdrChecksum"],
      "type" : "generic",
      "calculation" : "calc_3",
      "verify" : false,
      "update" : true,
      "if_cond" : {
        "type" : "expression",
        "value" : {
          "op" : "d2b",
          "left" : null,
          "right" : {
            "type" : "field",
            "value" : ["ipv4", "$valid$"]
          }
        }
      }
    }
  ],
  "force_arith" : [],
  "extern_instances" : [],
  "field_aliases" : [
    [
      "queueing_metadata.enq_timestamp",
      ["standard_metadata", "enq_timestamp"]
    ],
    [
      "queueing_metadata.enq_qdepth",
      ["standard_metadata", "enq_qdepth"]
    ],
    [
      "queueing_metadata.deq_timedelta",
      ["standard_metadata", "deq_timedelta"]
    ],
    [
      "queueing_metadata.deq_qdepth",
      ["standard_metadata", "deq_qdepth"]
    ],
    [
      "intrinsic_metadata.ingress_global_timestamp",
      ["standard_metadata", "ingress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.egress_global_timestamp",
      ["standard_metadata", "egress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.mcast_grp",
      ["standard_metadata", "mcast_grp"]
    ],
    [
      "intrinsic_metadata.egress_rid",
      ["standard_metadata", "egress_rid"]
    ],
    [
      "intrinsic_metadata.priority",
      ["standard_metadata", "priority"]
    ]
  ],
  "program" : "/home/wly/p4-learning/exercises/10-Congestion_Aware_Load_Balancing/p4src/loadbalancer.p4i",
  "__meta__" : {
    "version" : [2, 23],
    "compiler" : "https://github.com/p4lang/p4c"
  }
}